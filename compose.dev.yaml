services:
  next-app:
    container_name: nextjs-app-route
    build:
      context: ./next-app
      dockerfile: dev.Dockerfile
    depends_on:
      - next-database
    # Set environment variables directly in the compose file
    environment:
      ENV_VARIABLE: ${ENV_VARIABLE}
      NEXT_PUBLIC_ENV_VARIABLE: ${NEXT_PUBLIC_ENV_VARIABLE}
      # NEXT_WEBPACK_USEPOLLING: 1
      # Set environment variables based on the .env file
    env_file:
      - .env
    volumes:
      - ./next-app/src:/app/src
      - ./next-app/public:/app/public
      - ./next-app/package.json:/app/package.json
      - ./next-app/package-lock.json:/app/package-lock.json
      - ./next-app/next.config.ts:/app/next.config.ts
      - ./next-app/tsconfig.json:/app/tsconfig.json
      - ./next-app/postcss.config.mjs:/app/postcss.config.mjs
      - ./next-app/tailwind.config.ts:/app/tailwind.config.ts
      - ./next-app/.env.development.local:/app/.env.development.local
    restart: always
    ports:
      - 3000:3000
    networks:
      - my_network2

  # Add more containers below (nginx, postgres, etc.)
  next-database:
    image: mongo:latest
    command: --port 27018
    volumes:
      - database:/data/db
    networks:
      - my_network2
    ports:
      - 27018:27018
# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
networks:
  my_network2:
    external: true

volumes:
  database:
